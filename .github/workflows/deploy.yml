name: Reusable Deploy Workflow

on:
  workflow_call:
    inputs:
      deploy_environment:
        required: true
        type: string
        description: 'Environment to deploy to (production or staging)'

env:
  TF_VERSION: '1.5.0'
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.deploy_environment }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Google Auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Setup Google Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Terraform Init
      working-directory: ./terraform
      run: |
        terraform init \
          -backend-config="bucket=simple-relay-${{ inputs.deploy_environment }}" \
          -backend-config="prefix=terraform-state"


    - name: Terraform Validate
      working-directory: ./terraform
      run: terraform validate

    - name: Terraform Plan
      working-directory: ./terraform
      env:
        TF_VAR_api_base_url: ${{ secrets.API_BASE_URL }}
        TF_VAR_official_base_url: ${{ secrets.OFFICIAL_BASE_URL }}
        TF_VAR_image_tag: ${{ github.sha }}
        TF_VAR_service_name: simple-relay
        TF_VAR_billing_service_name: simple-relay-billing
        TF_VAR_frontend_service_name: simple-relay-frontend
        TF_VAR_firestore_database_name: simple-relay-db
        TF_VAR_deploy_environment: ${{ inputs.deploy_environment }}
        TF_VAR_api_secret_key: ${{ secrets.API_SECRET_KEY }}
        TF_VAR_resend_api_key: ${{ inputs.deploy_environment == 'production' && secrets.RESEND_API_KEY_PRODUCTION || secrets.RESEND_API_KEY_STAGING }}
        TF_VAR_resend_from_email: ${{ secrets.RESEND_FROM_EMAIL }}
        TF_VAR_cookie_secret: ${{ inputs.deploy_environment == 'production' && secrets.COOKIE_SECRET_PRODUCTION || secrets.COOKIE_SECRET_STAGING }}
      run: terraform plan -input=false -no-color

  docker-build-backend:
    name: Build and Push Backend Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment: ${{ inputs.deploy_environment }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Setup Google Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Docker Auth
      id: docker-auth
      uses: 'docker/login-action@v3'
      with:
        registry: ${{ env.REGION }}-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}

    - name: Build and Push Backend Container
      working-directory: ./
      run: |-
        docker build -f apps/backend/Dockerfile -t "${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/simple-relay/simple-relay:${{ github.sha }}" ./
        docker push "${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/simple-relay/simple-relay:${{ github.sha }}"

  docker-build-billing:
    name: Build and Push Billing Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment: ${{ inputs.deploy_environment }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Setup Google Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Docker Auth
      id: docker-auth
      uses: 'docker/login-action@v3'
      with:
        registry: ${{ env.REGION }}-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}

    - name: Build and Push Billing Container
      working-directory: ./
      run: |-
        docker build -f apps/billing/Dockerfile -t "${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/simple-relay/simple-billing:${{ github.sha }}" ./
        docker push "${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/simple-relay/simple-billing:${{ github.sha }}"

  docker-build-frontend:
    name: Build and Push Frontend Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment: ${{ inputs.deploy_environment }}
    env:
      BACKEND_URL: ${{ inputs.deploy_environment == 'production' && 'https://api.aifastlane.net' || 'https://staging-api.aifastlane.net' }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Setup Google Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Docker Auth
      id: docker-auth
      uses: 'docker/login-action@v3'
      with:
        registry: ${{ env.REGION }}-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}

    - name: Build and Push Frontend Container
      working-directory: ./apps/frontend
      run: |-
        docker build --build-arg VITE_BACKEND_URL="${{ env.BACKEND_URL }}" -t "${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/simple-relay/simple-frontend:${{ github.sha }}" .
        docker push "${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/simple-relay/simple-frontend:${{ github.sha }}"

  e2e-tests:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/backend-e2e-tests-reusable.yml

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    needs: [terraform-plan, docker-build-backend, docker-build-billing, docker-build-frontend, e2e-tests]
    environment: ${{ inputs.deploy_environment }}
    concurrency: 
      group: deploy-${{ inputs.deploy_environment }}
      cancel-in-progress: false
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Google Auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Setup Google Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Terraform Init
      working-directory: ./terraform
      run: |
        terraform init \
          -backend-config="bucket=simple-relay-${{ inputs.deploy_environment }}" \
          -backend-config="prefix=terraform-state"

    - name: Terraform Apply
      working-directory: ./terraform
      env:
        TF_VAR_api_base_url: ${{ secrets.API_BASE_URL }}
        TF_VAR_official_base_url: ${{ secrets.OFFICIAL_BASE_URL }}
        TF_VAR_image_tag: ${{ github.sha }}
        TF_VAR_service_name: simple-relay
        TF_VAR_billing_service_name: simple-relay-billing
        TF_VAR_frontend_service_name: simple-relay-frontend
        TF_VAR_firestore_database_name: simple-relay-db
        TF_VAR_deploy_environment: ${{ inputs.deploy_environment }}
        TF_VAR_api_secret_key: ${{ secrets.API_SECRET_KEY }}
        TF_VAR_resend_api_key: ${{ inputs.deploy_environment == 'production' && secrets.RESEND_API_KEY_PRODUCTION || secrets.RESEND_API_KEY_STAGING }}
        TF_VAR_resend_from_email: ${{ secrets.RESEND_FROM_EMAIL }}
        TF_VAR_cookie_secret: ${{ inputs.deploy_environment == 'production' && secrets.COOKIE_SECRET_PRODUCTION || secrets.COOKIE_SECRET_STAGING }}
      run: terraform apply -input=false -auto-approve -no-color